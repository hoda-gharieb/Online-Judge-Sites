#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
#include<stdio.h>
#include<set>
#include<map>
#include<string>
#include<algorithm>
#include<limits.h>
#include<math.h>
#include<iomanip>
#include<queue>
#include<sstream>
using namespace std;

#define Forp( i,l ) for ( int i=0 ; i<l ; i++ )
#define Form( i,l ) for ( int i=l-1 ; i>=0 ; i-- )
#define vs vector< string >
#define vi vector< int >
#define vll vector< long long >
#define msv map< string, vs >
#define mst( i,j ) memset( i,j,sizeof(i))
typedef long long ll;
const int oo = (int)1e9;
string addition ( string line , string line1)
{
	int sum=0,rem=0;
	if ( line.length()<line1.length())
		swap(line,line1);
	for ( int i=line.length()-1 , j=line1.length()-1 ; j>=0 ; --j ,--i )
	{
		sum=(line[i]-'0')+(line1[j]-'0')+sum;
		rem=sum%10;
		sum/=10;
		line[i]=rem+'0';
	}
	if ( sum>0 && ( line.length()==line1.length()))
		line.insert(0,1,'1');
	else
	{
		for ( int i= (line.length()-line1.length()-1); i>=0 ; --i)
		{
			sum=(line[i]-'0')+sum;
			rem=sum%10;
			sum/=10;
			line[i]=rem+'0';
			if ( sum==0 )
				break;
		}
		if ( sum>0 )
			line.insert(0,1,'1');
	}
	return line;
}

int main()
{
	//freopen ( "input.in" , "r" ,stdin );
	int n;
	cin>>n;
	vector< string> V;
	V.resize( n+1 );
	V[ 0 ] = "0";
	V[ 1 ] = "1";
	for ( int i=2 ; i<=n ; i++ )
		V[ i ] = addition( V[ i-1 ], V[ i-2 ] );
	cout<<V[n]<<endl;
}