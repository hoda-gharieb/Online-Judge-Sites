#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
#include<stdio.h>
#include<set>
#include<map>
#include<string>
#include<algorithm>
#include<limits.h>
#include<math.h>
#include<iomanip>
#include<queue>
#include<sstream>
#include<cstdlib>
#include<complex>
#include<vector>
#include<cstdio>
using namespace std;

#define Forp( i,k,l ) for ( int i=k ; i<l ; i++ )
#define Form( i,l ) for ( int i=l-1 ; i>=0 ; i-- )
#define vs vector< string >
#define vi vector< int >
#define vll vector< long long >
#define msv map< string, vs >
#define mst( i,j ) memset( i,j,sizeof(i))
typedef long long ll;

int arr[ 101 ][ 101 ],v,c;
int cand[ 102 ];

int main()
{
	//freopen ( "input.in" , "r" ,stdin );	
	int t;
	scanf( "%d", &t );
	while( t-- )
	{ 
		scanf( "%d %d", &c, &v );
		Forp( i, 0, v )
			Forp( j, 0, c )
			scanf( "%d", &arr[ i ][ j ] );
		mst( cand,0 );
		Forp( i, 0, v )
			cand[ arr[ i ][ 0 ] ] ++;
		int max1,max2,m,n;
		max1 = max2 = m = n = 0;
		Forp( i, 1, c+1 )
		{
			if ( cand[ i ] > m )
			{
				n = m;
				m = cand[ i ];
				max2 = max1;
				max1 = i;
			}
			else if ( cand[ i ] > n )
			{
				max2 = i;
				n = cand[ i ];
			}
		}
		if ( m > v/2 )
		{
			printf( "%d %d\n", max1, 1 );
			continue;
		}
		cand[ max1 ] = cand[ max2 ] = 0;
		Forp( i,0,v )
		{
			Forp( j,0,c )
			{
				if ( arr[ i ][ j ] == max1 || arr[ i ][ j ] == max2 )
				{
					cand[ arr[ i ][ j ] ] ++;
					break;
				}
			}
		}
		if ( cand[ max1 ] > cand[ max2 ] )
			n = max1;
		else
			n = max2;
		printf( "%d %d\n", n, 2);
	}
}