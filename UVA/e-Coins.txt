#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
#include<stdio.h>
#include<set>
#include<string>
#include<algorithm>
#include<limits.h>
#include<math.h>
#include<iomanip>
#include<map>
#include<queue>

using namespace std;

#define Forp( i,l ) for ( int i=0 ; i<l ; i++ )
#define Form( i,l ) for ( int i=l-1 ; i>=0 ; i-- )
#define vs vector< string >
#define vi vector< int >
#define vll vector< long long >
#define msv map< string, vs >
#define mst( i,j ) memset( i,j,sizeof(i))
typedef long long ll;
const int oo = (int)1e9;
const int inf = 120000;

int con[ 41 ], info[ 41 ], dp[ 302 ][ 302 ],S;
int main()
{
	//freopen ( "input.in", "r", stdin );
	int n,m;
	cin>>n;
	while ( n-- )
	{
		cin>>m>>S;
		Forp( i,m )
			cin>>con[ i ]>>info[ i ];
		for ( int i=0 ; i<=S ; i++ )
			for ( int j=0 ; j<=S ; j++ )
				dp[ i ][ j ] = inf;

		dp[ 0 ][ 0 ] = 0;
		Forp( k,m )
		{
			for ( int i=con[k] ; i<=S ; i++ )
				for ( int j=info[k] ; j<=S ; j++ )
					dp[ i ][ j ] = min ( dp[ i ][ j ] , 1 + dp[ i-con[k] ][ j-info[k] ] );
		}

		int ans = inf, squ = S*S;
		for ( int i=0 ; i<=S ; i++ )
			for ( int j=0 ; j<=S ; j++ )
				if ( i*i + j*j == squ )
					ans = min ( ans, dp[ i ][ j ] );
		if ( ans == inf )
			cout<<"not possible\n";
		else
			cout<<ans<<endl;

	}
}

