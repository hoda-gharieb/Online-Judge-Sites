#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
#include<stdio.h>
#include<set>
#include<string>
#include<algorithm>
#include<limits.h>
#include<math.h>
#include<iomanip>
#include<map>
#include<queue>
using namespace std;



#define Forp( i,l ) for ( int i=0 ; i<l ; i++ )
#define Form( i,l ) for ( int i=l-1 ; i>=0 ; i-- )
#define vs vector< string >
#define vi vector< int >
#define vll vector< long long >
#define msv map< string, vs >
typedef long long ll;
const int oo = (int)1e9;

string name[ 23 ];
int graph[ 23 ][ 23 ];


int main()
{
	//freopen ( "input.in", "r", stdin );
	int n, m, S=1;
	while ( cin>>n>>m )
	{
		if ( !n && !m )
			break;
		Forp( i, n )
		{
			cin >> name[ i ];
			Forp ( j,n )
			{
				if ( i==j )
					graph[ i ][ j ] = 0;
				else
					graph[ i ][ j ] = 100000;
			}
		}
		int s, d, c;
		Forp( i, m )
		{
			cin>>s>>d>>c;
			s--; d--;
			graph[ s ][ d ] = graph[ d ][ s ] = c;
		}
		Forp( k, n )
			Forp( i, n )
			Forp( j, n )
			graph[ i ][ j ] = min ( graph[ i ][ j ], graph[ i ][ k ] + graph[ k ][ j ] );
		int ans = 1000000000, index, count;
		Forp( i,n )
		{
			count = 0;
			Forp( j,n )
				count += graph[ i ][ j ];
			if ( count < ans )
			{
				ans = count ;
				index = i;
			}
		}
		cout<<"Case #"<<S++<<" : "<<name[ index ]<<endl;
	}
}

