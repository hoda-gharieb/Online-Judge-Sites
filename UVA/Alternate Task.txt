#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
using namespace std;
vector<int> primeList;
bool prime[2005];
int anss[2005];
void doPrime(long long num)
{
	memset(prime,true,sizeof(prime));
	prime[0]=prime[1]=false;
	long long i=4;
	while ( i<=num )
	{
		prime[i]=false;
		i+=2;
	}
	primeList.push_back(2);
	for ( i=3 ; i<=num ; i+=2 )
	{
		if ( prime[i] )
		{
			for ( long long  j=i*i ; j<=num ; j+=i )
				prime[j]=false;
			primeList.push_back(i);
		}
	}
}
void sumDiv()
{
	long long index=0,ans=1,power,num;
	for ( int i=1 ; i<2001 ; i++ )
	{
		if ( prime[i])
		{
			anss[i]=i+1;
			continue;
		}
		index=0;ans=1;
		num=i;
		while ( num!=1 && (primeList[index]*primeList[index]<=num ))
		{
			power=0;
			while ( num%primeList[index]==0 )
			{
				num/=primeList[index];
				power++;
			}
			ans*=( (long long)pow((double)primeList[index],power+1.0)-1 )/ (primeList[index]-1);
			index++;
		}
		if ( num!= 1 )
			ans*=( (long long)pow((double)num,2.0)-1 )/ (num-1);
		anss[i]= ans;
	}
}
int main()
{
	//freopen("input.in","r",stdin);
	doPrime(2000);
	sumDiv();
	int n,ans,s=1;
	while ( cin>>n && n!=0 )
	{
		ans=-1;
		for ( int i=2000 ; i>0 ; i-- )
		{
			if ( anss[i]==n )
			{
				ans=i;
				break;
			}
		}
		cout<<"Case "<<s<<": "<<ans<<endl;
		s++;
	}
}