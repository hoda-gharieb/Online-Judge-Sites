#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
#include<stdio.h>
#include<set>
#include<string>
using namespace std;

vector<int> primeList;
bool prime[1005];
int Div[1000005];
int ans[1000005];
void doPrime(int num)
{
	memset(prime,true,sizeof(prime));
	prime[0]=prime[1]=false;
	int i=4;
	while ( i<=num )
	{
		prime[i]=false;
		i+=2;
	}
	primeList.push_back(2);
	for ( i=3 ; i<=num ; i+=2 )
	{
		if ( prime[i] )
		{
			for ( long long  j=i*i ; j<=num ; j+=i )
				prime[j]=false;
			primeList.push_back(i);
		}
	}
}
void numDiv (  )
{
	Div [ 1 ] = 1;
	for ( int i=1 ; i<=1000000 ; i++ )
	{
		if ( i<=1000 && prime[i] )
		{
			Div [i] = 2;
			continue;
		}
		long long index=0,power;
		int n=i;
		Div[i]=1;
		while ( n!=1 && index<primeList.size() && (primeList[index]*primeList[index]<=n) )
		{
			power=0;
			while ( n%primeList[index]==0 )
			{
				n/=primeList[index];
				power++;
			}
			Div[i]*=(++power);
			index++;
		}
		if ( n!=1 )
			Div[i]*=2;
	}
	ans [ 1 ] = 1;
	for ( int i=1 ; i<=1000000 ; i++ )
	{
		if ( Div[i] >= Div[i-1 ] )
		{
			ans [ i] = i;
		}
		else
		{
			Div [i] = Div [ i-1 ];
			ans [ i] = ans[i-1];
		}
	}
}

int main()
{
	//freopen ( "input.in" , "r" , stdin );
	//freopen ( "output.out" , "w" , stdout );
	doPrime( 1000 );
	numDiv();
	int t,n, max,m ;
	scanf ( "%d",&t );
	for ( int i=0 ; i<t ; i++ )
	{
		scanf ( "%d",&n );
		printf("%d\n",ans[n]);
	}
}
