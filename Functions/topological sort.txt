#include<iostream>
#include<string>
#include<queue>
#include<map>
#include<set>
#include<cstring>
#include<vector>
#include<limits.h>
#include<iomanip>
#include<stdio.h>
#include<cmath>
#include<algorithm>
using namespace std;

vector<int> top_sort;
vector < int > V[102];
bool visited[101];

void topological_sort( int u )
{
	visited[u]=true;
	for ( int i=0 ; i<V[u].size() ; i++ )
		if ( !visited[ V[u][i] ])
			topological_sort ( V[u][i] );
	top_sort.push_back(u);
}

int main()
{
	//freopen ( "input.in" , "r" , stdin );
	int num,tasks,x,n ;
	while ( cin>>num>>tasks )
	{
		if ( !num && !tasks )
			break;
		memset ( visited , false , sizeof(visited) );
		for ( int i=0 ; i<tasks ; i++ )
		{
			cin>>n>>x;
			V[n].push_back(x);
		}
		for ( int i=1 ; i<=num ; i++ )
			if ( !visited[i] )
				topological_sort(i);
		reverse ( top_sort.begin() , top_sort.end() );

		cout<<top_sort[0];
		for ( int i=1 ; i<top_sort.size() ; i++ )
			cout<<" "<<top_sort[i];
		cout<<endl;
		top_sort.clear();
		for ( int i=1 ; i<=num ; i++ )
			V[i].clear();
	}
}